version: '3'


dotenv:
  - .env

includes:
  weather:
    taskfile: ./weather/taskfile.yaml
    dir: ./weather
  gateway:
    taskfile: ./gateway/taskfile.yaml
    dir: ./gateway
  subscriptions:
      taskfile: ./subscriptions/taskfile.yaml
      dir: ./subscriptions

tasks:

  run:
    desc: "Run service"
    dotenv:
      - .env
    cmds:
      - docker-compose up -d
  run:build:
    desc: "Run service"
    dotenv:
        - .env
    cmds:
      - docker-compose up -d --build

  stop:
    desc: "Stop service"
    cmds:
      - docker-compose down

  lint:
    desc: "Run golangci-lint"
    deps:
      - install:lint
    preconditions:
      - command -v golangci-lint
    cmds:
      - task: gateway:lint
      - task: weather:lint
      - task: subscriptions:lint

  format:
    desc: "Run gofumpt to format code"
    deps:
      - install:gofumpt
    preconditions:
      - command -v gofumpt
    cmds:
      - gofumpt -l -w .

  install:
    desc: "Install all packages"
    deps:
      - install:lint
      - install:gofumpt
      - install:goose
      - install:swaggo
      - weather:install

  install:lint:
    desc: "Install golangci-lint"
    cmds:
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest
    status:
      - command -v golangci-lint

  install:swaggo:
    desc: "Install swaggo for swagger generation"
    cmds:
      - go install github.com/swaggo/swag/cmd/swag@latest
    status:
      - command -v swag

  install:gofumpt:
    desc: "Install gofumpt"
    cmds:
      - go install mvdan.cc/gofumpt@latest
    status:
      - command -v gofumpt

  swag-gen:
    desc: "Generate swagger files"
    deps:
      - install:swaggo
    dir: ./main
    cmds:
      - swag init --parseDependency --parseInternal --output ../docs -g ./main.go


  test:unit:
    desc: "Run unit tests"
    cmds:
      - task: subscriptions:test:unit
      - task: weather:test:unit

  test:integration:
    desc: "Run integration tests (requires docker-compose.test.yml)"
    cmds:
      - task: subscriptions:test:integration
      - task: weather:test:integration

