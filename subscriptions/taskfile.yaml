version: "3"

tasks:
  run:
    desc: "Populate env from .env file and run service"
    deps: [install:godotenv]
    cmds:
      - godotenv -f ../.env task run-with-env

  lint:
    desc: "Run golangci-lint"
    deps:
      - install:lint
    preconditions:
      - command -v golangci-lint
    cmds:
      - golangci-lint run --config <(curl -sSfL https://raw.githubusercontent.com/fabl3ss/genesis-se-school-linter/refs/heads/main/.golangci.yaml) --modules-download-mode=readonly

  install:
    desc: "Install all tools"
    deps:
      - install:lint


  install:lint:
    desc: "Install golangci-lint"
    cmds:
      - go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@latest
    status:
      - command -v golangci-lint

  test:unit:
    desc: "Run unit tests"
    cmds:
      - go test -v -tags=unit ./...

  test:integration:
    desc: "Run integration tests (requires docker-compose.test.yml)"
    dotenv:
      - ../.env.example
    cmds:
      - docker compose -f docker-compose.test.yml up -d
      - sleep 2
      - go test -v -tags=integration ./...
      - docker compose -f docker-compose.test.yml down

  migrations-up:
    desc: "Start migrations for db"
    deps:
      - install:goose
    cmds:
      - goose -dir migrations sqlite3 subscriptions.db up

  migrations-down:
    desc: "Rollback migrations"
    deps:
      - install:goose
    cmds:
      - goose -dir migrations sqlite3 subscriptions.db down

  migrations-status:
    desc: "Show migration status"
    deps:
      - install:goose
    cmds:
      - goose -dir migrations sqlite3 subscriptions.db status

  install:goose:
    desc: "Install goose"
    cmds:
      - go install github.com/pressly/goose/v3/cmd/goose@latest
    status:
      - command -v goose