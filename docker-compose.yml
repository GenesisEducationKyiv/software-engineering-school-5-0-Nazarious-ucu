services:

  weather:
    build:
      context: .
      dockerfile: ./weather/Dockerfile
    platform: linux/amd64
    restart: on-failure
    env_file:
      - .env
    networks:
      - default

  sub:
    build:
      context: .
      dockerfile: subscriptions/Dockerfile
    platform: linux/amd64
    restart: on-failure
    ports:
      - "${SERVER_PORT:-8080}:8080"
      - "50051:50051"
    env_file:
      - .env
    volumes:
      - ./subscriptions.db:/app/subscriptions.db
    depends_on:
      - weather

  gateway:
    build:
      context: .
      dockerfile: ./gateway/Dockerfile
    platform: linux/amd64
    restart: on-failure
    ports:
      - "8081:${GATEWAY_SERVER_PORT:-8081}"
    env_file:
      - .env
    depends_on:
      - sub
      - weather

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    command: [ "redis-server", "--appendonly", "yes" ]

  prometheus:
    image: prom/prometheus:v2.50.0
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    ports:
      - "9090:9090"
    depends_on:
      - weather

  grafana:
    image: grafana/grafana:10.4.5
    ports:
      - "3000:3000"
    volumes:
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    environment:
      - DS_PROMETHEUS=Prometheus
      - GF_SECURITY_ADMIN_PASSWORD=admin

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: guest
      RABBITMQ_DEFAULT_PASS: guest
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    networks:
      - default

volumes:
  redis-data:
  rabbitmq-data:
  prometheus-data:

networks:
    default:
        driver: bridge

    monitoring:
        driver: bridge
        external: true

    grafana:
        driver: bridge
        external: true

    prometheus:
        driver: bridge
        external: true

